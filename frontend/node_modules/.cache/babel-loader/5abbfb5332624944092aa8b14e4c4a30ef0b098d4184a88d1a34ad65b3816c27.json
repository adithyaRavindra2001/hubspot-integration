{"ast":null,"code":"var _jsxFileName = \"/home/adithya/Desktop/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/hubspot.js\",\n  _s = $RefreshSig$();\n// hubspot.js\n\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleGetCredentials();\n        }\n      }, 1000);\n    } catch (error) {\n      console.error('Error connecting to HubSpot:', error);\n      setIsConnecting(false);\n    }\n  };\n  const handleGetCredentials = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response === null || response === void 0 ? void 0 : response.data;\n      if (credentials) {\n        setIntegrationParams(prevParams => ({\n          ...prevParams,\n          credentials: credentials\n        }));\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error getting HubSpot credentials:', error);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const handleDisconnect = () => {\n    setIntegrationParams(prevParams => ({\n      ...prevParams,\n      credentials: null\n    }));\n    setIsConnected(false);\n  };\n  useEffect(() => {\n    if (integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials) {\n      setIsConnected(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      marginTop: 2\n    },\n    children: !isConnected ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleConnectClick,\n      disabled: isConnecting,\n      sx: {\n        textTransform: 'none'\n      },\n      children: isConnecting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20,\n          sx: {\n            marginRight: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this), \"Connecting...\"]\n      }, void 0, true) : 'Connect to HubSpot'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2705 Connected to HubSpot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: handleDisconnect,\n        sx: {\n          textTransform: 'none'\n        },\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleGetCredentials","error","console","credentials","prevParams","handleDisconnect","sx","marginTop","children","variant","color","onClick","disabled","textTransform","size","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/adithya/Desktop/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// hubspot.js\n\nimport { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    CircularProgress\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    // Function to open OAuth in a new window\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n            const authURL = response?.data;\n\n            const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n            // Polling for the window to close\n            const pollTimer = window.setInterval(() => {\n                if (newWindow?.closed !== false) {\n                    window.clearInterval(pollTimer);\n                    handleGetCredentials();\n                }\n            }, 1000);\n\n        } catch (error) {\n            console.error('Error connecting to HubSpot:', error);\n            setIsConnecting(false);\n        }\n    };\n\n    const handleGetCredentials = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n            const credentials = response?.data;\n\n            if (credentials) {\n                setIntegrationParams(prevParams => ({\n                    ...prevParams,\n                    credentials: credentials\n                }));\n                setIsConnected(true);\n            }\n        } catch (error) {\n            console.error('Error getting HubSpot credentials:', error);\n        } finally {\n            setIsConnecting(false);\n        }\n    };\n\n    const handleDisconnect = () => {\n        setIntegrationParams(prevParams => ({\n            ...prevParams,\n            credentials: null\n        }));\n        setIsConnected(false);\n    };\n\n    useEffect(() => {\n        if (integrationParams?.credentials) {\n            setIsConnected(true);\n        }\n    }, []);\n\n    return (\n        <Box sx={{ marginTop: 2 }}>\n            {!isConnected ? (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleConnectClick}\n                    disabled={isConnecting}\n                    sx={{ textTransform: 'none' }}\n                >\n                    {isConnecting ? (\n                        <>\n                            <CircularProgress size={20} sx={{ marginRight: 1 }} />\n                            Connecting...\n                        </>\n                    ) : (\n                        'Connect to HubSpot'\n                    )}\n                </Button>\n            ) : (\n                <Box>\n                    <p>âœ… Connected to HubSpot</p>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={handleDisconnect}\n                        sx={{ textTransform: 'none' }}\n                    >\n                        Disconnect\n                    </Button>\n                </Box>\n            )}\n        </Box>\n    );\n};"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACIC,GAAG,EACHC,MAAM,EACNC,gBAAgB,QACb,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,GAAG;EAAEC,iBAAiB;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EAC1F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAMoB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACAD,eAAe,CAAC,IAAI,CAAC;MACrB,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEZ,IAAI,CAAC;MAChCU,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEX,GAAG,CAAC;MAC9B,MAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAE,sDAAqD,EAAEJ,QAAQ,CAAC;MACnG,MAAMK,OAAO,GAAGF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI;MAE9B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,EAAE,uBAAuB,EAAE,uBAAuB,CAAC;;MAExF;MACA,MAAMK,SAAS,GAAGF,MAAM,CAACG,WAAW,CAAC,MAAM;QACvC,IAAI,CAAAJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,MAAM,MAAK,KAAK,EAAE;UAC7BJ,MAAM,CAACK,aAAa,CAACH,SAAS,CAAC;UAC/BI,oBAAoB,CAAC,CAAC;QAC1B;MACJ,CAAC,EAAE,IAAI,CAAC;IAEZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDjB,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED,MAAMgB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACA,MAAMd,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEZ,IAAI,CAAC;MAChCU,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEX,GAAG,CAAC;MAC9B,MAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAE,wDAAuD,EAAEJ,QAAQ,CAAC;MACrG,MAAMiB,WAAW,GAAGd,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI;MAElC,IAAIW,WAAW,EAAE;QACbxB,oBAAoB,CAACyB,UAAU,KAAK;UAChC,GAAGA,UAAU;UACbD,WAAW,EAAEA;QACjB,CAAC,CAAC,CAAC;QACHrB,cAAc,CAAC,IAAI,CAAC;MACxB;IACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC9D,CAAC,SAAS;MACNjB,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;IAC3B1B,oBAAoB,CAACyB,UAAU,KAAK;MAChC,GAAGA,UAAU;MACbD,WAAW,EAAE;IACjB,CAAC,CAAC,CAAC;IACHrB,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZ,IAAIY,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAEyB,WAAW,EAAE;MAChCrB,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACL,GAAG;IAACuC,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAE,CAAE;IAAAC,QAAA,EACrB,CAAC3B,WAAW,gBACTT,OAAA,CAACJ,MAAM;MACHyC,OAAO,EAAC,WAAW;MACnBC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAE1B,kBAAmB;MAC5B2B,QAAQ,EAAE7B,YAAa;MACvBuB,EAAE,EAAE;QAAEO,aAAa,EAAE;MAAO,CAAE;MAAAL,QAAA,EAE7BzB,YAAY,gBACTX,OAAA,CAAAE,SAAA;QAAAkC,QAAA,gBACIpC,OAAA,CAACH,gBAAgB;UAAC6C,IAAI,EAAE,EAAG;UAACR,EAAE,EAAE;YAAES,WAAW,EAAE;UAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,iBAE1D;MAAA,eAAE,CAAC,GAEH;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,gBAET/C,OAAA,CAACL,GAAG;MAAAyC,QAAA,gBACApC,OAAA;QAAAoC,QAAA,EAAG;MAAsB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7B/C,OAAA,CAACJ,MAAM;QACHyC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAC,WAAW;QACjBC,OAAO,EAAEN,gBAAiB;QAC1BC,EAAE,EAAE;UAAEO,aAAa,EAAE;QAAO,CAAE;QAAAL,QAAA,EACjC;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvC,EAAA,CApGWL,kBAAkB;AAAA6C,EAAA,GAAlB7C,kBAAkB;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}